version: "3"
services:
  reverse-proxy:
    image: traefik:v2.9
    command:
      - --log.level=${LOG_LEVEL}
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      # Entry points
      - --entryPoints.web.address=:${HTTP_PORT}
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entryPoints.websecure.address=:${HTTPS_PORT}
      # HTTP challenge
      - --certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      # Let's Encrypt's staging server
      # uncomment during testing to avoid rate limiting
      - --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
    ports:
      - "${HTTP_PORT}:80"
      - "${HTTPS_PORT}:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DATA_DIR}/letsencrypt/:/letsencrypt/
    restart: ${RESTART_POLICY}

  play:
    image: thecodingmachine/workadventure-play:${VERSION}
    command: yarn run start
    environment:
      - DEBUG_MODE
      - JITSI_URL
      - JITSI_PRIVATE_MODE
      - ENABLE_FEATURE_MAP_EDITOR
      - PUSHER_URL=https://${PUSHER_HOST}
      - ICON_URL=https://${ICON_HOST}
      - TURN_SERVER
      - TURN_USER
      - TURN_PASSWORD
      - TURN_STATIC_AUTH_SECRET
      - STUN_SERVER
      - SKIP_RENDER_OPTIMIZATIONS
      - MAX_PER_GROUP
      - MAX_USERNAME_LENGTH
      - DISABLE_ANONYMOUS
      - DISABLE_NOTIFICATIONS
      - SECRET_KEY
      - API_URL=back:50051
      - FRONT_URL=https://${FRONT_HOST}
      - CHAT_URL=https://${CHAT_HOST}
      - PUBLIC_MAP_STORAGE_URL=https://${MAP_STORAGE_HOST}
      - START_ROOM_URL
      - ENABLE_CHAT
      - ENABLE_CHAT_UPLOAD
      - ENABLE_CHAT_ONLINE_LIST
      - ENABLE_CHAT_DISCONNECTED_LIST
      - UPLOADER_URL=https://${UPLOADER_HOST}
      # Only used if you set up a JWT authentication mechanism in Ejabberd
      - EJABBERD_JWT_SECRET=${EJABBERD_JWT_SECRET}
      - EJABBERD_DOMAIN=https://${EJABBERD_HOST}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.play.rule=Host(`${FRONT_HOST}`)"
      - "traefik.http.routers.play.entryPoints=web"
      - "traefik.http.services.play.loadbalancer.server.port=3000"
      - "traefik.http.routers.play-ssl.rule=Host(`${FRONT_HOST}`)"
      - "traefik.http.routers.play-ssl.entryPoints=websecure"
      - "traefik.http.routers.play-ssl.service=play"
      - "traefik.http.routers.play-ssl.tls=true"
      - "traefik.http.routers.play-ssl.tls.certresolver=myresolver"
    restart: ${RESTART_POLICY}

  chat:
    image: thecodingmachine/workadventure-chat:${VERSION}
    environment:
      - PUSHER_URL=https://${PUSHER_HOST}
      - UPLOADER_URL=https://${UPLOADER_HOST}
      - EMBEDLY_KEY
      - ENABLE_CHAT_UPLOAD
      - EJABBERD_DOMAIN=https://${EJABBERD_HOST}
      - EJABBERD_WS_URI=wss://${EJABBERD_HOST}/ws
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chat.rule=Host(`${CHAT_HOST}`)"
      - "traefik.http.routers.chat.entryPoints=web"
      - "traefik.http.services.chat.loadbalancer.server.port=80"
      - "traefik.http.routers.chat-ssl.rule=Host(`${CHAT_HOST}`)"
      - "traefik.http.routers.chat-ssl.entryPoints=websecure"
      - "traefik.http.routers.chat-ssl.service=chat"
      - "traefik.http.routers.chat-ssl.tls=true"
      - "traefik.http.routers.chat-ssl.tls.certresolver=myresolver"
    restart: ${RESTART_POLICY}

  back:
    image: thecodingmachine/workadventure-back:${VERSION}
    command: yarn run runprod
    environment:
      - SECRET_JITSI_KEY
      - ENABLE_FEATURE_MAP_EDITOR
      - SECRET_KEY
      - ADMIN_API_TOKEN
      - ADMIN_API_URL
      - TURN_SERVER
      - TURN_USER
      - TURN_PASSWORD
      - STUN_SERVER
      - JITSI_URL
      - JITSI_ISS
      - MAX_PER_GROUP
      - STORE_VARIABLES_FOR_LOCAL_MAPS
      - REDIS_HOST=redis
      - PROMETHEUS_AUTHORIZATION_TOKEN
      - MAP_STORAGE_URL=map-storage:50053
      - PUBLIC_MAP_STORAGE_URL=https://${MAP_STORAGE_HOST}
      - PLAYER_VARIABLES_MAX_TTL
      - EJABBERD_API_URI=http://ejabberd:5443/api
      - EJABBERD_DOMAIN=${EJABBERD_DOMAIN}
      - EJABBERD_USER=${EJABBERD_USER}
      - EJABBERD_PASSWORD=${EJABBERD_PASSWORD}
      - ENABLE_CHAT
      - ENABLE_CHAT_UPLOAD
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.back.rule=Host(`${BACK_HOST}`)"
      - "traefik.http.routers.back.entryPoints=web"
      - "traefik.http.services.back.loadbalancer.server.port=8080"
      - "traefik.http.routers.back-ssl.rule=Host(`${BACK_HOST}`)"
      - "traefik.http.routers.back-ssl.entryPoints=websecure"
      - "traefik.http.routers.back-ssl.service=back"
      - "traefik.http.routers.back-ssl.tls=true"
      - "traefik.http.routers.back-ssl.tls.certresolver=myresolver"
    restart: ${RESTART_POLICY}

  uploader:
    image: thecodingmachine/workadventure-uploader:${VERSION}
    environment:
      - UPLOADER_URL=https://${UPLOADER_HOST}
      #AWS
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_BUCKET=${AWS_BUCKET}
      - AWS_URL=${AWS_URL}
      - AWS_ENDPOINT=${AWS_ENDPOINT}
      #REDIS
      - REDIS_HOST=${UPLOADER_REDIS_HOST}
      - REDIS_PORT=${UPLOADER_REDIS_PORT}
      #CHAT
      - ADMIN_API_URL
      - ENABLE_CHAT_UPLOAD
      - UPLOAD_MAX_FILESIZE
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.uploader.rule=Host(`${UPLOADER_HOST}`)"
      - "traefik.http.routers.uploader.entryPoints=web"
      - "traefik.http.services.uploader.loadbalancer.server.port=8080"
      - "traefik.http.routers.uploader-ssl.rule=Host(`${UPLOADER_HOST}`)"
      - "traefik.http.routers.uploader-ssl.entryPoints=websecure"
      - "traefik.http.routers.uploader-ssl.service=uploader"
      - "traefik.http.routers.uploader-ssl.tls=true"
      - "traefik.http.routers.uploader-ssl.tls.certresolver=myresolver"

  icon:
    image: matthiasluedtke/iconserver:v3.13.0
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.icon.rule=Host(`${ICON_HOST}`)"
      - "traefik.http.routers.icon.entryPoints=web"
      - "traefik.http.services.icon.loadbalancer.server.port=8080"
      - "traefik.http.routers.icon-ssl.rule=Host(`${ICON_HOST}`)"
      - "traefik.http.routers.icon-ssl.entryPoints=websecure"
      - "traefik.http.routers.icon-ssl.service=icon"
      - "traefik.http.routers.icon-ssl.tls=true"
      - "traefik.http.routers.icon-ssl.tls.certresolver=myresolver"

  redis:
    image: redis:7
    volumes:
      - redisdata:/data

  ejabberd:
    image: thecodingmachine/workadventure-ejabberd:${VERSION}
    ports:
      - '5443:5443'
    environment:
      - CTL_ON_CREATE=register ${EJABBERD_USER} ${EJABBERD_DOMAIN} ${EJABBERD_PASSWORD}
      - JWT_SECRET=${EJABBERD_JWT_SECRET}
      - EJABBERD_DOMAIN=${EJABBERD_DOMAIN}
      - EJABBERD_USER=${EJABBERD_USER}
      - EJABBERD_PASSWORD=${EJABBERD_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ejabberd.rule=Host(`${EJABBERD_HOST}`)"
      - "traefik.http.routers.ejabberd.entryPoints=web"
      - "traefik.http.services.ejabberd.loadbalancer.server.port=5443"
      - "traefik.http.routers.ejabberd-ssl.rule=Host(`${EJABBERD_HOST}`)"
      - "traefik.http.routers.ejabberd-ssl.entryPoints=websecure"
      - "traefik.http.routers.ejabberd-ssl.service=ejabberd"
      - "traefik.http.routers.ejabberd-ssl.tls=true"
      - "traefik.http.routers.ejabberd-ssl.tls.certresolver=myresolver"

  map-storage:
    image: thecodingmachine/workadventure-map-storage:${VERSION}
    environment:
      PROMETHEUS_AUTHORIZATION_TOKEN: "$PROMETHEUS_AUTHORIZATION_TOKEN"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.map-storage.rule=Host(`${MAP_STORAGE_HOST}`)"
      - "traefik.http.routers.map-storage.entryPoints=web"
      - "traefik.http.services.map-storage.loadbalancer.server.port=3000"
      - "traefik.http.routers.map-storage-ssl.rule=Host(`${MAP_STORAGE_HOST}`)"
      - "traefik.http.routers.map-storage-ssl.entryPoints=websecure"
      - "traefik.http.routers.map-storage-ssl.service=map-storage"
      - "traefik.http.routers.map-storage-ssl.tls=true"
      - "traefik.http.routers.map-storage-ssl.tls.certresolver=myresolver"

#  coturn:
#    image: coturn/coturn:4.5.2
#    command:
#      - turnserver
#      #- -c=/etc/coturn/turnserver.conf
#      - --log-file=stdout
#      - --external-ip=167.235.192.197
#      - --listening-port=3478
#      - --min-port=10000
#      - --max-port=10010
#      - --tls-listening-port=5349
#      - --listening-ip=0.0.0.0
#      - --realm=localhost
#      - --server-name=play.dictionary-of-miu.de
#      - --lt-cred-mech
#      # Enable Coturn "REST API" to validate temporary passwords.
#      #- --use-auth-secret
#      #- --static-auth-secret=SomePoeschlAuthSecret
#      #- --userdb=/var/lib/turn/turndb
#      - --user=workadventure:WorkAdventure1234
#      # use real-valid certificate/privatekey files
#      #- --cert=/root/letsencrypt/fullchain.pem
#      #- --pkey=/root/letsencrypt/privkey.pem
#    network_mode: host

volumes:
  redisdata:
