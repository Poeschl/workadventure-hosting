# Security
#

# Secret used to encode session data in localstorage.
# Required
SECRET_KEY=
# Secret used to encode JWT secrets between WorkAdventure and the XMPP server.
# Required
EJABBERD_JWT_SECRET=

#
# Networking
#

# Subdomains
FRONT_HOST=play.workadventure.localhost
CHAT_HOST=chat.workadventure.localhost
PUSHER_HOST=play.workadventure.localhost
BACK_HOST=api.workadventure.localhost
MAP_STORAGE_HOST=map-storage.workadventure.localhost
MAPS_HOST=maps.workadventure.localhost
ICON_HOST=icon.workadventure.localhost
UPLOADER_HOST=uploader.workadventure.localhost
EJABBERD_HOST=ejabberd.workadventure.localhost

#
# Admin API (optional)
#

# Secret used to access the admin component. Only required if you are using an "admin" server.
ADMIN_API_TOKEN=
# SAAS admin panel
ADMIN_API_URL=

#
# Basic configuration
#

# The directory to store data in
DATA_DIR=./wa

# The URL used by default, in the form: "/_/global/map/url.json"
START_ROOM_URL=/_/global/thecodingmachine.github.io/workadventure-map-starter-kit/map.json

MAX_PER_GROUP=4
MAX_USERNAME_LENGTH=10
DISABLE_ANONYMOUS=false

# The version of the docker image to use
VERSION=v1.14.9

# Docker Restart Policy
RESTART_POLICY=unless-stopped

#
# Jitsi
#

JITSI_URL=meet.jit.si
# If your Jitsi environment has authentication set up,
# you MUST set JITSI_PRIVATE_MODE to "true"
# and you MUST pass a SECRET_JITSI_KEY to generate the JWT secret
JITSI_PRIVATE_MODE=false
JITSI_ISS=
SECRET_JITSI_KEY=

#
# Turn/Stun
# (necessary for near-field voice chat)
#

# URL of the TURN server (needed to "punch a hole" through some networks for P2P connections)
TURN_SERVER=turn:<host>:<port>
TURN_SERVER_EXTERNAL_IP=

# A random secret for the connection to the TURN server
TURN_STATIC_AUTH_SECRET=

# When connection to a TURN server with user and password. (Not needed with the coturn included here.)
# TURN_USER=
# TURN_PASSWORD=

# URL of the STUN server (when using the provided coturn TURN server this can be the same host as the TURN_SERVER variable, except for the suffix)
STUN_SERVER=stun:<host>:<port>

#
# Certificate config
#

# The email address used by Let's encrypt to send renewal warnings (compulsory)
ACME_EMAIL=

#
# Ejabberd/XMPP
# (necessary for chat)
#

EJABBERD_USER=
EJABBERD_PASSWORD=
EJABBERD_LOG_LEVEL=3

#
# Advanced configuration
# Generally does not need to be changed
#

# Networking
HTTP_PORT=80
HTTPS_PORT=443

# Workadventure settings
DISABLE_NOTIFICATIONS=false
SKIP_RENDER_OPTIMIZATIONS=false
STORE_VARIABLES_FOR_LOCAL_MAPS=true

# Prometheus settings
## Uncomment this to enable the /metrics Prometheus endpoint.
## To hit this endpoint, you will need to configure Prometheus with:
## authorization:
##   type: Bearer
##   credentials: "[The value of PROMETHEUS_AUTHORIZATION_TOKEN env variable]"
#PROMETHEUS_AUTHORIZATION_TOKEN=my_password

# Debugging options
DEBUG_MODE=false
LOG_LEVEL=WARN

# The server id is used to uniquely identify a cluster of WorkAdventure servers
# It will generate a "/server.json" file at the root of the play container.
# It is only used in rare circumstances. You can safely keep it empty.
SERVER_ID=

#
# CHAT
#

# Enable / disable chat
ENABLE_CHAT=true
# Enable / disable upload of file in chat
ENABLE_CHAT_UPLOAD=false
# Chat max uploadable file size (Byte)
UPLOAD_MAX_FILESIZE=10485760
ENABLE_CHAT_ONLINE_LIST=true
ENABLE_CHAT_DISCONNECTED_LIST=true
# Max day of chat history that can be fetched by users
## No restriction is : 0 or not defined value
# MAX_HISTORY_CHAT=0

# Embedely key api for rich media embeds
## used in the chat service
EMBEDLY_KEY=

# The maximum time to live of player variables for logged players, expressed in seconds (no limit by default).
# Use "-1" for infinity.
# Note that anonymous players don't have any TTL limit because their data is stored in local storage, not in Redis database.
PLAYER_VARIABLES_MAX_TTL=-1
